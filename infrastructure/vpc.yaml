Description: >
  Theorem LLC Nested Stack VPC setup

Parameters:
  Name:
    Type: String
    Description: VPC Name used for Label Tags 

  VpcCIDR:
    Type: String
    Description: VPC Cidr Block

  Subnet1CIDR:
    Type: String
    Description: Subnet Cidr Block 1 created in AZ1

  Subnet2CIDR:
    Type: String
    Description: Subnet Cidr Block 2 created in AZ2

  DestinationCidrBlock:
    Type: String
    Default: 0.0.0.0/0
    Description: Destination Cidr Block

  Environment:
    Type: String
    Description: Label Tag for environment used for Label Tags 

  AppOwner:
    Type: String
    Description: Label tag for App Owner used for Label Tags 

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      Tags:
        - Key: Name
          Value: !Ref Name
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref AppOwner

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref Name
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref AppOwner

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs ]
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref Subnet1CIDR
      Tags:
        - Key: Name
          Value: !Sub ${Name} (Public)
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref AppOwner

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs ]
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref Subnet2CIDR
      Tags:
        - Key: Name
          Value: !Sub ${Name} (Public)
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref AppOwner

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref Name
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref AppOwner

  DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: !Ref DestinationCidrBlock
      GatewayId: !Ref InternetGateway

  Subnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet1

  Subnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet2


Outputs:
  Subnets:
    Value: !Join [ ",", [ !Ref Subnet1, !Ref Subnet2 ] ]
  Subnet1:
    Value: !Ref Subnet1
  Subnet2:
    Value: !Ref Subnet2
  Az1:
    Value: !GetAtt Subnet1.AvailabilityZone
  Az2:
    Value: !GetAtt Subnet2.AvailabilityZone
  VpcId:
    Value: !Ref VPC
  VpcDefaultSG:
    Value: !GetAtt VPC.DefaultSecurityGroup
